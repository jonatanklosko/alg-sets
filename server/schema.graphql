type Query {
  me: User
  algSet(id: ID!): AlgSet
  algSets(filter: String, offset: Int, limit: Int): AlgSetsResult!
  randomAlgs(count: Int!): [String!]!
}

type Mutation {
  createAlgSet(name: String!, secret: Boolean!, stage: String!, topView: Boolean!, algs: [String!]): AlgSet
  updateAlgSet(id: ID!, name: String, secret: Boolean, stage: String, topView: Boolean, algs: [String!]): AlgSet
  deleteAlgSet(id: ID!): AlgSet
  addAlgToAlgSet(id: ID!, alg: String!): AlgSet
  removeAlgFromAlgSet(id: ID!, alg: String!): AlgSet
  starAlgSet(id: ID!): AlgSet # Idea: return user instead? (maybe this could automatically update apollo cache)
  unstarAlgSet(id: ID!): AlgSet
  updateMe(colorScheme: String): User
}

type User {
  id: ID!
  # WCA attributes
  wcaUserId: Int!
  wcaId: String
  name: String!
  avatar: Avatar!
  # Additional attributes
  algSets: [AlgSet!]!
  starredAlgSets: [AlgSet!]!
  colorScheme: String
}

type Avatar {
  url: String
  thumbUrl: String
}

type AlgSet {
  id: ID!
  name: String!
  secret: Boolean!
  stage: String!
  topView: Boolean!
  owner: User!
  algs: [String!]!
  stargazers: [User!]!
}

type AlgSetsResult {
  edges: [AlgSet!]!
  totalCount: Int!
}
